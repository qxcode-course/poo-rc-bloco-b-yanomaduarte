{
    "patches": [
        {
            "label": "2025-10-28_11-11-46",
            "content": "@@ -1834,32 +1834,33 @@\n __ligado = False\n+:\n %0A               \n",
            "lines": "136"
        },
        {
            "label": "2025-10-28_11-12-06",
            "content": "@@ -2259,17 +2259,17 @@\n f, tempo\n-:\n+;\n  int):%0A \n@@ -3825,17 +3825,16 @@\n name__ =\n-=\n  %22__main\n",
            "lines": "136"
        },
        {
            "label": "2025-10-28_11-13-07",
            "content": "class Bateria:\n    def __init__(self, carga: int, capacidade: int):\n        self.__carga = carga\n        self.__capacidade = capacidade\n\n    def getCharge(self):\n        return self.__carga\n\n    def getCapacity(self):\n        return self.__capacidade\n\n    def carregar(self, valor: int):\n        self.__carga += valor\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def descarregar(self, valor: int):\n        self.__carga -= valor\n        if self.__carga < 0:\n            self.__carga = 0\n\n    def __str__(self):\n        return f\"{self.__carga}/{self.__capacidade}\"\n\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n\n    def getPotencia(self):\n        return self.__potencia\n\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__bateria = None\n        self.__carregador = None\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria\n\n    def setCarregador(self, carregador: Carregador):\n        self.__carregador = carregador\n\n    def ligar(self):\n        if self.__ligado:\n            print(\"fail: notebook ja esta ligado\")\n            return\n        if not self.__bateria and not self.__carregador:\n            print(\"fail: nao ha bateria nem carregador\")\n            return\n        if self.__bateria and self.__bateria.getCarga() >= 0:\n            self.__ligado = True\n            print(\"notebook ligado (usando bateria)\")\n        elif self.__carregador:\n            self.__ligado = True\n            print(\"notebook ligado (usando carregador)\")\n        else:\n            print(\"fail: sem carga na bateria e sem carregador\")\n\n        def desligar(self):\n            if not self.__ligado:\n                print(\"fail: notebook j\u00e1 est\u00e1 desligado\")\n            else:\n                self.__ligado = False\n                print(\"notebook desligado\")\n\n        def mostrar(Self):\n            estado = \"ligado\" if self.__ligado else \"desligado\"\n            bat = str(self.__bateria) if self.__bateria else \"sem bateria\"\n            car = f\"{self.__carregador.getPotencia()}W\" if self.__carregador else \"sem carregador\"\n            print(f\"Notebook {estado} | Bateria: {bat} | Carregador: {car}\")\n\n        def usar(self, tempo: int):\n            if not self.__ligado:\n                print(\"fail: notebook est\u00e1 desligado, impossivel usar\")\n                return\n            if not self.__bateria:\n                print(\"fail: notebook sem bateria\")\n                return\n            for i in range(tempo):\n                if self.__carregador:\n                    self.__bateria.carregador(self.__carregador.getPotencia())\n                else:\n                    self.__bateria.descarregar(1)\n                if self.__bateria.getCarga() <= 0 and not self.__carregador:\n                    print(\"fail: bateria acabou, notebook desligando\")\n                    self.__ligado = False\n                    break\n            print(\"usou o notebook por {tempo} minutos\")\n\n\ndef main():\n    nb = Notebook()\n\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n        if len(args) == 0:\n            continue\n\n        cmd = args[0]\n\n        if cmd == \"end\":\n            break\n\n        elif cmd == \"show\":\n            nb.mostrar()\n\n        elif cmd == \"setBat\":\n            carga = int(args[1])\n            cap = int(args[2])\n            nb.setBateria(Bateria(carga, cap))\n\n        elif cmd == \"setCar\":\n            pot = int(args[1])\n            nb.setCarregador(Carregador(pot))\n\n        elif cmd == \"ligar\":\n            nb.ligar()\n\n        elif cmd == \"desligar\":\n            nb.desligar()\n\n        elif cmd == \"usar\":\n            tempo = int(args[1])\n            nb.usar(tempo)\n\n        else:\n            print(\"fail: comando invalido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "136"
        }
    ]
}